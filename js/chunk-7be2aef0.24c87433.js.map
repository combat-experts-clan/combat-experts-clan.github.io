{"version":3,"sources":["webpack:///./node_modules/vuetify/lib/util/mergeData.js","webpack:///./node_modules/vuetify/lib/components/VGrid/VContainer.js","webpack:///./node_modules/vuetify/lib/components/VGrid/grid.js"],"names":["mergeData","mergeTarget","prop","event","i","arguments","length","Object","keys","Array","isArray","concat","undefined","trim","listeners","__webpack_exports__","grid","extend","name","functional","props","id","String","tag","type","default","fluid","Boolean","[object Object]","h","data","children","classes","attrs","filter","key","value","startsWith","domProps","staticClass","class","container--fluid","__webpack_require__","d","VGrid","vue__WEBPACK_IMPORTED_MODULE_0__","join"],"mappings":"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","file":"js/chunk-7be2aef0.24c87433.js","sourcesContent":["/**\n * @copyright 2017 Alex Regan\n * @license MIT\n * @see https://github.com/alexsasharegan/vue-functional-data-merge\n */\nexport default function mergeData() {\n  const mergeTarget = {};\n  let i = arguments.length;\n  let prop;\n  let event; // Allow for variadic argument length.\n\n  while (i--) {\n    // Iterate through the data properties and execute merge strategies\n    // Object.keys eliminates need for hasOwnProperty call\n    for (prop of Object.keys(arguments[i])) {\n      switch (prop) {\n        // Array merge strategy (array concatenation)\n        case 'class':\n        case 'style':\n        case 'directives':\n          if (!Array.isArray(mergeTarget[prop])) {\n            mergeTarget[prop] = [];\n          } // Repackaging in an array allows Vue runtime\n          // to merge class/style bindings regardless of type.\n\n\n          mergeTarget[prop] = mergeTarget[prop].concat(arguments[i][prop]);\n          break;\n        // Space delimited string concatenation strategy\n\n        case 'staticClass':\n          if (!arguments[i][prop]) {\n            break;\n          }\n\n          if (mergeTarget[prop] === undefined) {\n            mergeTarget[prop] = '';\n          }\n\n          if (mergeTarget[prop]) {\n            // Not an empty string, so concatenate\n            mergeTarget[prop] += ' ';\n          }\n\n          mergeTarget[prop] += arguments[i][prop].trim();\n          break;\n        // Object, the properties of which to merge via array merge strategy (array concatenation).\n        // Callback merge strategy merges callbacks to the beginning of the array,\n        // so that the last defined callback will be invoked first.\n        // This is done since to mimic how Object.assign merging\n        // uses the last given value to assign.\n\n        case 'on':\n        case 'nativeOn':\n          if (!mergeTarget[prop]) {\n            mergeTarget[prop] = {};\n          }\n\n          const listeners = mergeTarget[prop];\n\n          for (event of Object.keys(arguments[i][prop] || {})) {\n            // Concat function to array of functions if callback present.\n            if (listeners[event]) {\n              // Insert current iteration data in beginning of merged array.\n              listeners[event] = Array().concat( // eslint-disable-line\n              listeners[event], arguments[i][prop][event]);\n            } else {\n              // Straight assign.\n              listeners[event] = arguments[i][prop][event];\n            }\n          }\n\n          break;\n        // Object merge strategy\n\n        case 'attrs':\n        case 'props':\n        case 'domProps':\n        case 'scopedSlots':\n        case 'staticStyle':\n        case 'hook':\n        case 'transition':\n          if (!mergeTarget[prop]) {\n            mergeTarget[prop] = {};\n          }\n\n          mergeTarget[prop] = { ...arguments[i][prop],\n            ...mergeTarget[prop]\n          };\n          break;\n        // Reassignment strategy (no merge)\n\n        case 'slot':\n        case 'key':\n        case 'ref':\n        case 'tag':\n        case 'show':\n        case 'keepAlive':\n        default:\n          if (!mergeTarget[prop]) {\n            mergeTarget[prop] = arguments[i][prop];\n          }\n\n      }\n    }\n  }\n\n  return mergeTarget;\n}\n//# sourceMappingURL=mergeData.js.map","import \"../../../src/components/VGrid/_grid.sass\";\nimport \"../../../src/components/VGrid/VGrid.sass\";\nimport Grid from './grid';\nimport mergeData from '../../util/mergeData';\n/* @vue/component */\n\nexport default Grid('container').extend({\n  name: 'v-container',\n  functional: true,\n  props: {\n    id: String,\n    tag: {\n      type: String,\n      default: 'div'\n    },\n    fluid: {\n      type: Boolean,\n      default: false\n    }\n  },\n\n  render(h, {\n    props,\n    data,\n    children\n  }) {\n    let classes;\n    const {\n      attrs\n    } = data;\n\n    if (attrs) {\n      // reset attrs to extract utility clases like pa-3\n      data.attrs = {};\n      classes = Object.keys(attrs).filter(key => {\n        // TODO: Remove once resolved\n        // https://github.com/vuejs/vue/issues/7841\n        if (key === 'slot') return false;\n        const value = attrs[key]; // add back data attributes like data-test=\"foo\" but do not\n        // add them as classes\n\n        if (key.startsWith('data-')) {\n          data.attrs[key] = value;\n          return false;\n        }\n\n        return value || typeof value === 'string';\n      });\n    }\n\n    if (props.id) {\n      data.domProps = data.domProps || {};\n      data.domProps.id = props.id;\n    }\n\n    return h(props.tag, mergeData(data, {\n      staticClass: 'container',\n      class: Array({\n        'container--fluid': props.fluid\n      }).concat(classes || [])\n    }), children);\n  }\n\n});\n//# sourceMappingURL=VContainer.js.map","// Types\nimport Vue from 'vue';\nexport default function VGrid(name) {\n  /* @vue/component */\n  return Vue.extend({\n    name: `v-${name}`,\n    functional: true,\n    props: {\n      id: String,\n      tag: {\n        type: String,\n        default: 'div'\n      }\n    },\n\n    render(h, {\n      props,\n      data,\n      children\n    }) {\n      data.staticClass = `${name} ${data.staticClass || ''}`.trim();\n      const {\n        attrs\n      } = data;\n\n      if (attrs) {\n        // reset attrs to extract utility clases like pa-3\n        data.attrs = {};\n        const classes = Object.keys(attrs).filter(key => {\n          // TODO: Remove once resolved\n          // https://github.com/vuejs/vue/issues/7841\n          if (key === 'slot') return false;\n          const value = attrs[key]; // add back data attributes like data-test=\"foo\" but do not\n          // add them as classes\n\n          if (key.startsWith('data-')) {\n            data.attrs[key] = value;\n            return false;\n          }\n\n          return value || typeof value === 'string';\n        });\n        if (classes.length) data.staticClass += ` ${classes.join(' ')}`;\n      }\n\n      if (props.id) {\n        data.domProps = data.domProps || {};\n        data.domProps.id = props.id;\n      }\n\n      return h(props.tag, data, children);\n    }\n\n  });\n}\n//# sourceMappingURL=grid.js.map"],"sourceRoot":""}